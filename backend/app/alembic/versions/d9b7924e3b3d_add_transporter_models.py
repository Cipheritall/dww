"""add_transporter_models

Revision ID: d9b7924e3b3d
Revises: 1a31ce608336
Create Date: 2024-12-15 21:35:45.294343

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'd9b7924e3b3d'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotion',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=False),
    sa.Column('applicable_countries', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vehicle',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('type', sa.Enum('BIKE', 'CAR', 'TRUCK', 'AIRPLANE', 'SHIP', name='vehicletype'), nullable=False),
    sa.Column('registration_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('capacity', sa.Float(), nullable=False),
    sa.Column('current_location', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deliverycompany',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('headquarters_address_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['headquarters_address_id'], ['address.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('driver',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('license_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('assigned_vehicle_id', sa.Uuid(), nullable=True),
    sa.Column('availability', sa.Boolean(), nullable=False),
    sa.Column('current_location', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_vehicle_id'], ['vehicle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('customer_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('customer_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('sender_address_id', sa.Uuid(), nullable=False),
    sa.Column('recipient_address_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'IN_TRANSIT', 'DELIVERED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('total_weight', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['recipient_address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['sender_address_id'], ['address.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('delivery',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('driver_id', sa.Uuid(), nullable=True),
    sa.Column('vehicle_id', sa.Uuid(), nullable=True),
    sa.Column('company_id', sa.Uuid(), nullable=False),
    sa.Column('pickup_address_id', sa.Uuid(), nullable=False),
    sa.Column('delivery_address_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('ASSIGNED', 'IN_TRANSIT', 'DELIVERED', 'CANCELLED', name='deliverystatus'), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['deliverycompany.id'], ),
    sa.ForeignKeyConstraint(['delivery_address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['pickup_address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packageitem',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('dimensions', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_method', sa.Enum('CREDIT_CARD', 'PAYPAL', 'CRYPTO', 'BANK_TRANSFER', name='paymentmethod'), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDING', 'SUCCESSFUL', 'FAILED', name='paymentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint('item_owner_id_fkey', 'item', type_='foreignkey')
    op.create_foreign_key(None, 'item', 'user', ['owner_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.create_foreign_key('item_owner_id_fkey', 'item', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_table('payment')
    op.drop_table('packageitem')
    op.drop_table('feedback')
    op.drop_table('delivery')
    op.drop_table('order')
    op.drop_table('driver')
    op.drop_table('deliverycompany')
    op.drop_table('vehicle')
    op.drop_table('promotion')
    op.drop_table('address')
    # ### end Alembic commands ###
